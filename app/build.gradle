plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

apply from: '../versions.gradle'

android {
    namespace 'com.example.test'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.test"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "BASE_URL", "\"https://gateway.marvel.com/\""
            buildConfigField "String", "API_PUBLIC_KEY", "\"b13f3dbb0975ee889b0e18b0a8d7d949\""
            buildConfigField "String", "API_PRIVATE_KEY", "\"261504e41b4f9ca46ed9b37921858aaa12c66e36\""
            buildConfigField "long", "API_TIMEOUT", "30"
        }
        mock {
            initWith(buildTypes.debug)
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "BASE_URL", "\"https://gateway.marvel.com/\""
            buildConfigField "String", "API_PUBLIC_KEY", "\"b13f3dbb0975ee889b0e18b0a8d7d949\""
            buildConfigField "String", "API_PRIVATE_KEY", "\"261504e41b4f9ca46ed9b37921858aaa12c66e36\""
            buildConfigField "long", "API_TIMEOUT", "30"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // LOCAL MODULES
    implementation project(':core')

    // ANDROID
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh_version"

    // KTX
    implementation "androidx.core:core-ktx:$ktx_core_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_ktx_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_ktx_version"

    // KTX VIEW MODEL
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ktx_version"

    // COROUTINES
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"

    // HILT
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    // HTTP REQUEST
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation("com.squareup.moshi:moshi-kotlin:$moshi_version")
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    // IMAGE HANDLERS
    implementation "de.hdodenhof:circleimageview:$circleimageview_version"
    implementation "io.coil-kt:coil:$coil_version"

    // LOTTIE
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // TESTS
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation("com.google.dagger:hilt-android-testing:$dagger_hilt_version")
}